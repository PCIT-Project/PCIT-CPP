// def std_exp = @import("std_exp/std_exp.pthr");

// def test = @importCPP("test.h");




type Struct = struct {
	func new = () -> (output: This) {
		output.ptr = &output;
		output.num = 0;
		return...;
	}

	func copy = (this) -> (output: This) {
		output.ptr = &output;
		output.num = copy this.num;
		return...;
	}

	func move = (this mut) -> (output: This) {
		output.ptr = &output;
		output.num = move this.num;
		return...;
	}

	const ptr: Struct*|; 
	var num: Int;
}





func test = () -> Struct {
	var s = new Struct();
	return move s;
}


func entry = () #entry -> UI8 {
	const struct_value: Struct = test();

	return (struct_value.ptr == &struct_value) as UI8;
}







