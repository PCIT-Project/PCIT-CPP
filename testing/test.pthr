

//////////////////////////////////////////////////////////////////////
// 
// the code in below sometimes creates a race codition preventing a stall
// 	When looking at `symbol_proc_list`, it was found that `bar` was still waiting
//  on the second `get_value` despite that `.passed_by_when_cond` was true
// 	The race condition occurs so rarely that it's difficult to debug
// 
// 	KEEP THIS SECTION UNTIL THE RACE CONDITION IS FIXED
// 

var bar: UI8 = get_value();


def USE_RVO: Bool = true;

when(USE_RVO){
	func get_value = () -> (output: UI8) {
		output = 12;
		return...;
	}
	
}else{
	func get_value = () -> UI8 {
		return 12;
	}
}



//////////////////////////////////////////////////////////////////////
// new feature testing:

func entry = () #entry -> UI8 {
	return get_value();
}

