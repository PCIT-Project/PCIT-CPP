// def std_exp = @import("std_exp/std_exp.pthr");

// def test = @importCPP("test.h");



type NonTrivial = struct {
	func new = () #rt -> (output: NonTrivial) { return...; }
	func delete = (this) #rt -> Void {}
}


type Vec2 = struct {
	// func new = (x: F32, y: F32) -> (output: Vec) {
	// 	output.x = copy x;
	// 	output.y = copy y;
	// 	return...;
	// }

	// func new = (this mut, x: F32, y: F32) -> Void {
	// 	this.x = copy x;
	// 	this.y = copy y;
	// }

	func delete = (this mut) #rt -> Void {
		this.x = 0.0;
		this.y = 0.0;

		delete this.non_trivial;
	}


	var x: F32 = 12.0;
	var y: F32;

	var non_trivial: NonTrivial;
}


// func entry = () #entry -> UI8 {
// 	// var vec: Vec2 = new Vec2();

// 	return 0;
// }