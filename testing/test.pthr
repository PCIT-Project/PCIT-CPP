

type Array = struct <{T: Type, SIZE: USize}>  {

	func at = (this, index: USize) -> T*| {
		return this._data[index];
	}

	func at = (this mut, index: USize) -> T* {
		return this._data[index];
	}


	var _data: [T:SIZE];
}


func get_index_1 = (arr: Array<{Int, 3}>) -> Int {
	return copy arr.at(1).*;
}



func entry = () #entry -> UI8 {
	var arr = new Array<{Int, 3}>();

	arr.at(1).* = 12;
	
	return get_index_1(arr) as UI8;
}