def std = @import("std");


interface Shape = {
	func num_sides = () -> F32;
	func area = (this) -> F32;
}


type Rectangle = struct {
	var width: F32;
	var height: F32;

	func num_sides_impl = () -> F32 { return 4.0; }

	func area = (this) -> F32 { return this.width * this.height; }

	impl Shape {
		num_sides = num_sides_impl,
		area = area,
	}
}

type Circle = struct {
	var radius: F32;

	func num_sides_impl = () -> F32 { return 0.0; }
	func area = (this) -> F32 { return this.radius * this.radius * 3.14; }

	impl Shape {
		num_sides = num_sides_impl,
		area = area,
	}
}



func get_area = (shape: Shape*) -> F32 {
	return shape.area();
}


func entry = () #entry -> UI8 {
	var rect = new Rectangle{width = 2.0, height = 3.0};
	var circle = new Circle{radius = 5.0};
	
	return get_area(&circle as Shape*) as UI8;
}
