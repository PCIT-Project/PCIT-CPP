// def std_exp = @import("std_exp/std_exp.pthr");

// def test = @importCPP("test.h");



interface Shape = {
	func get_sides = () -> UInt;
}


type Rectangle = struct {
	var width: UInt;
	var height: UInt;

	func get_sides_impl = () -> UInt { return 4; }

	impl Shape {
		get_sides = get_sides_impl,
	}
}

type Circle = struct {
	var radius: UInt;

	func get_sides_impl = () -> UInt { return 0; }

	impl Shape {
		get_sides = get_sides_impl,
	}
}



func get_num_sides = (shape: Shape) -> UInt {
	return shape.get_sides();
}


func entry = () #entry -> UI8 {
	var rect = new Rectangle{width = 0, height = 0};
	var circle = new Circle{radius = 0};
	
	return (get_num_sides(rect) + get_num_sides(circle)) as UI8;
}
