// def std_exp = @import("std_exp/std_exp.pthr");

// def test = @importCPP("test.h");


type Vec = struct {
	// func new = (x: F32, y: F32) -> (output: Vec) {
	// 	output.x = copy x;
	// 	output.y = copy y;
	// 	return...;
	// }

	// func new = (this mut, x: F32, y: F32) -> Void {
	// 	this.x = copy x;
	// 	this.y = copy y;
	// }


	var x: F32;
	var y: F32;
	var z: F32*?;
}



func get_default_vec_x = () -> F32 {
	const vec = new Vec();
	return copy vec.x;
}



func entry = () #entry -> UI8 {
	const num = new UI8();

	var foo: Vec = new Vec();

	def ASDF: F32 = get_default_vec_x();

	return ASDF as UI8;
}